package org.netbeans.modules.remotefs.ftp.ui;

import java.awt.event.KeyEvent;
import javax.swing.JPanel;
import org.netbeans.modules.remotefs.ftp.resources.Bundle;
import org.openide.util.NbBundle;

public final class NewFTPSiteVisualPanel1 extends JPanel {

    public static final String SITE_NAME = "site_name";
    public static final String SITE_SERVER = "site_server";
    public static final String SITE_USER = "site_user";
    public static final String SITE_PWD = "site_pwd";
    public static final String SITE_INIT_FOLDER = "site_init_folder";
    public static final String SITE_PASSIVE_MODE = "site_passive_mode";
    private static final String PROP_NAME = "NewFTPSiteVisualPanel1.name";
    private static final long serialVersionUID = 1L;
    private String siteName = "";
    private String siteServer = "";
    private String siteUser = "";
    private String sitePassword = "";
    private String siteInitFolder = "";

    public NewFTPSiteVisualPanel1() {
        initComponents();
    }

    @Override
    public String getName() {
        return NbBundle.getMessage(Bundle.class, PROP_NAME);
    }

//    private void setTestResult(boolean succes, String message) {
//        if (succes) {
//            jLabel5.setText("Test succesfull!");
//            jLabel5.setForeground(Color.GREEN);
//        } else {
//            jLabel5.setText("Test failed! " + message);
//            jLabel5.setForeground(Color.RED);
//        }
//    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        serverLabel = new javax.swing.JLabel();
        userNameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        initialFolderLabel = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        serverField = new javax.swing.JTextField();
        userField = new javax.swing.JTextField();
        initFolderField = new javax.swing.JTextField();
        connNameLabel = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        passiveModeCheckBox = new javax.swing.JCheckBox();

        setToolTipText(org.openide.util.NbBundle.getMessage(Bundle.class, "NewFTPSiteVisualPanel1.toolTipText")); // NOI18N

        serverLabel.setText(org.openide.util.NbBundle.getMessage(Bundle.class, "NewFTPSiteVisualPanel1.serverLabel.text")); // NOI18N

        userNameLabel.setText(org.openide.util.NbBundle.getMessage(Bundle.class, "NewFTPSiteVisualPanel1.userNameLabel.text")); // NOI18N

        passwordLabel.setText(org.openide.util.NbBundle.getMessage(Bundle.class, "NewFTPSiteVisualPanel1.passwordLabel.text")); // NOI18N

        initialFolderLabel.setText(org.openide.util.NbBundle.getMessage(Bundle.class, "NewFTPSiteVisualPanel1.initialFolderLabel.text")); // NOI18N

        passwordField.setToolTipText(org.openide.util.NbBundle.getMessage(Bundle.class, "NewFTPSiteVisualPanel1.passwordField.toolTipText")); // NOI18N
        passwordField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                passwordFieldFocusLost(evt);
            }
        });
        passwordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordFieldKeyReleased(evt);
            }
        });

        serverField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                serverFieldFocusLost(evt);
            }
        });
        serverField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                serverFieldKeyReleased(evt);
            }
        });

        userField.setText(org.openide.util.NbBundle.getMessage(Bundle.class, "NewFTPSiteVisualPanel1.userField.text")); // NOI18N
        userField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                userFieldFocusLost(evt);
            }
        });
        userField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                userFieldKeyReleased(evt);
            }
        });

        initFolderField.setToolTipText(org.openide.util.NbBundle.getMessage(Bundle.class, "NewFTPSiteVisualPanel1.initFolderField.toolTipText")); // NOI18N
        initFolderField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                initFolderFieldFocusLost(evt);
            }
        });
        initFolderField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                initFolderFieldKeyReleased(evt);
            }
        });

        connNameLabel.setText(org.openide.util.NbBundle.getMessage(Bundle.class, "NewFTPSiteVisualPanel1.connNameLabel.text")); // NOI18N

        nameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameFieldFocusLost(evt);
            }
        });
        nameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameFieldKeyReleased(evt);
            }
        });

        passiveModeCheckBox.setSelected(true);
        passiveModeCheckBox.setText(org.openide.util.NbBundle.getMessage(Bundle.class, "NewFTPSiteVisualPanel1.passiveModeCheckBox.text")); // NOI18N
        passiveModeCheckBox.setToolTipText(org.openide.util.NbBundle.getMessage(Bundle.class, "NewFTPSiteVisualPanel1.passiveModeCheckBox.toolTipText")); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(serverLabel)
                            .add(userNameLabel)
                            .add(connNameLabel))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, nameField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, serverField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                            .add(userField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(passwordLabel)
                            .add(initialFolderLabel))
                        .add(42, 42, 42)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(initFolderField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                            .add(passwordField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)))
                    .add(passiveModeCheckBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(7, 7, 7)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(connNameLabel)
                    .add(nameField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(serverLabel)
                    .add(serverField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(12, 12, 12)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(userNameLabel)
                    .add(userField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(13, 13, 13)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(passwordField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(passwordLabel))
                .add(14, 14, 14)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(initialFolderLabel)
                    .add(initFolderField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(passiveModeCheckBox)
                .addContainerGap(81, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void setValue(String param, String text) {
        if (param.equals(SITE_INIT_FOLDER)) {
            setSiteInitFolder(text);
        } else if (param.equals(SITE_NAME)) {
            setSiteName(text);
        } else if (param.equals(SITE_USER)) {
            setSiteUser(text);
        } else if (param.equals(SITE_PWD)) {
            setSitePassword(text);
        } else if (param.equals(SITE_SERVER)) {
            setSiteServer(text);
        }
    }

    private void nameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameFieldFocusLost
        setValue(SITE_NAME, nameField.getText());
    }//GEN-LAST:event_nameFieldFocusLost

    private void serverFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_serverFieldFocusLost
        setValue(SITE_SERVER, serverField.getText());
    }//GEN-LAST:event_serverFieldFocusLost

    private void userFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userFieldFocusLost
        setValue(SITE_USER, userField.getText());
    }//GEN-LAST:event_userFieldFocusLost

    private void passwordFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordFieldFocusLost
        setValue(SITE_PWD, new String(passwordField.getPassword()));
    }//GEN-LAST:event_passwordFieldFocusLost

    private void initFolderFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_initFolderFieldFocusLost
        setValue(SITE_INIT_FOLDER, initFolderField.getText());
    }//GEN-LAST:event_initFolderFieldFocusLost

    private void initFolderFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_initFolderFieldKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            setValue(SITE_INIT_FOLDER, initFolderField.getText());
        }
    }//GEN-LAST:event_initFolderFieldKeyReleased

    private void passwordFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordFieldKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            setValue(SITE_PWD, new String(passwordField.getPassword()));
        }
    }//GEN-LAST:event_passwordFieldKeyReleased

    private void userFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userFieldKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            setValue(SITE_USER, userField.getText());
        }
    }//GEN-LAST:event_userFieldKeyReleased

    private void serverFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_serverFieldKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            setValue(SITE_SERVER, serverField.getText());
        }
    }//GEN-LAST:event_serverFieldKeyReleased

    private void nameFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameFieldKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            setValue(SITE_NAME, nameField.getText());
        }
    }//GEN-LAST:event_nameFieldKeyReleased
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel connNameLabel;
    private javax.swing.JTextField initFolderField;
    private javax.swing.JLabel initialFolderLabel;
    private javax.swing.JTextField nameField;
    private javax.swing.JCheckBox passiveModeCheckBox;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JTextField serverField;
    private javax.swing.JLabel serverLabel;
    private javax.swing.JTextField userField;
    private javax.swing.JLabel userNameLabel;
    // End of variables declaration//GEN-END:variables

    public String getSiteName() {
        if (siteName == null || "".equals(siteName)) {
            return "New FTP Site";
        }
        return siteName;
    }

    public void setSiteName(String siteName) {
        if (siteName != null) {
            this.siteName = siteName;
        }
    }

    public String getSiteServer() {
        return siteServer;
    }

    public void setSiteServer(String siteServer) {
        if (siteServer != null) {
            this.siteServer = siteServer;
        }
    }

    public String getSiteUser() {
        return siteUser;
    }

    public void setSiteUser(String siteUser) {
        if (siteUser != null) {
            this.siteUser = siteUser;
        }
    }

    public String getSitePassword() {
        return sitePassword;
    }

    public void setSitePassword(String sitePassword) {
        if (sitePassword != null) {
            this.sitePassword = sitePassword;
        }
    }

    public String getSiteInitFolder() {
        return siteInitFolder;
    }

    public void setSiteInitFolder(String siteInitFolder) {
        if (siteInitFolder != null) {
            this.siteInitFolder = siteInitFolder;
        }
    }

    public boolean isPassiveMode() {
        return this.passiveModeCheckBox.isSelected();
    }
}



